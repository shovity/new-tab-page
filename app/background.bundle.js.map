{"version":3,"sources":["webpack:///webpack/bootstrap dc2ac78cab2d0e419e4a","webpack:///./src/background/index.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;AC7DA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,6CAA6C;AACnE,GAAG;AACH;;;AAGA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,0BAA0B,mCAAmC;AAC7D;;AAEA;AACA;AACA;AACA,4BAA4B,6CAA6C;AACzE;AACA,SAAS;AACT;AACA;AACA;AACA,8BAA8B,4CAA4C;AAC1E,WAAW;AACX;;AAEA;;AAEA;AACA;AACA;AACA,4BAA4B,8CAA8C;AAC1E,SAAS;AACT;;AAEA;AACA;AACA,kCAAkC,oBAAoB;AACtD;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA,4BAA4B,yCAAyC;AACrE,SAAS;AACT;AACA;AACA;AACA,8BAA8B,6BAA6B;AAC3D,WAAW;AACX;;AAEA;;AAEA;AACA,0BAA0B,2BAA2B;AACrD;AACA,GAAG;AACH,CAAC,C","file":"background.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 8);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap dc2ac78cab2d0e419e4a","// REQUEST LIST \nconst GET_NOTES     = 'GET_NOTES'\nconst POST_NOTES    = 'POST_NOTES'\nconst GET_BOOkMARK  = 'GET_BOOkMARK'\nconst GET_MOSTSITE  = 'GET_MOSTSITE'\nconst ARE_YOU_READY = 'ARE_YOU_READY'\n\nlet bookmarksCache = null\nlet notesCache = null\n\nconst notifiBookmarkUpdated = (port, type) => {\n  chrome.bookmarks.getTree((bookmarkNodes) => {\n    console.log('notifi changed', type)\n    bookmarksCache = bookmarkNodes\n    port.postMessage({ request: GET_BOOkMARK, data: bookmarkNodes })\n  })\n}\n\n\nchrome.runtime.onConnect.addListener((port) => {\n\n  // Only service port name \"pip\"\n  if (port.name !== 'pip') return\n\n  // listen update bookmark\n  chrome.bookmarks.onCreated.addListener(()           => notifiBookmarkUpdated(port, 'created'))\n  chrome.bookmarks.onRemoved.addListener(()           => notifiBookmarkUpdated(port, 'removed'))\n  chrome.bookmarks.onChanged.addListener(()           => notifiBookmarkUpdated(port, 'changed'))\n  chrome.bookmarks.onMoved.addListener(()             => notifiBookmarkUpdated(port, 'moved'))\n\n  // listen mesg from newtab page\n  port.onMessage.addListener(function(msg) {\n    switch (msg.request) {\n\n      case ARE_YOU_READY:\n        // check background script ready\n        port.postMessage({ request: msg.request, data: true })\n        break\n\n      case GET_BOOkMARK:\n        // Get bookmarks recent\n        if (bookmarksCache) {\n          port.postMessage({ request: msg.request, data: bookmarksCache })\n          console.log('get bookmarks cached')\n        } else {\n          console.log('get bookmarks none cache')\n          chrome.bookmarks.getTree((bookmarkNodes) => {\n            bookmarksCache = bookmarkNodes\n            port.postMessage({ request: msg.request, data: bookmarkNodes })\n          })\n        }\n\n        break\n\n      case GET_MOSTSITE:\n        // Get most sites visited\n        chrome.topSites.get((mostVisitedUrls) => {\n          port.postMessage({ request: msg.request, data: mostVisitedUrls })\n        })\n        break\n\n      case POST_NOTES:\n        // write notes -> storage\n        chrome.storage.local.set({ 'notes': msg.data }, () => {\n          console.log('write notes')\n          notesCache.notes = msg.data\n        })\n        break\n\n      case GET_NOTES:\n        // Get notes\n        if (notesCache) {\n          console.log('get notes cached')\n          port.postMessage({ request: msg.request, data: notesCache })\n        } else {\n          console.log('get notes none cache')\n          chrome.storage.local.get('notes', (data) => {\n            notesCache = data\n            port.postMessage({ request: msg.request, data })\n          })\n        }\n          \n        break\n\n      default:\n        port.postMessage({ err: 'request not macth' })\n    }\n  })\n})\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/background/index.js\n// module id = 8\n// module chunks = 1"],"sourceRoot":""}